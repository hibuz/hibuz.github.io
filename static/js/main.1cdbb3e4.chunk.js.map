{"version":3,"sources":["components/StockList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columns","field","headerName","description","width","headerAlign","renderCell","params","Company","name","value","logo","getValue","cellClassName","sortable","valueFormatter","Number","toLocaleString","Math","floor","String","substr","props","img","startsWith","src","alt","useStyles","makeStyles","root","height","textAlign","StockList","rows","classes","className","onRowClick","param","window","open","hideFooter","autoHeight","App","useState","stockList","setStockList","useEffect","PublicGoogleSheetsParser","parse","atob","then","res","data","sort","a","b","marketcap_usd","map","item","index","id","slice","Toolbar","disableGutters","Typography","variant","style","marginLeft","noWrap","date","Date","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","today","href","textDecoration","margin","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cdbb3e4.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DataGrid, ColDef, CellParams, RowParams } from '@material-ui/data-grid';\n\nconst columns: ColDef[] = [\n  { field: 'id',\n    headerName: '순위',\n    description: 'USD 시가총액 기준 순위',\n    width: 62\n  },\n  { field: 'name_ko',\n    headerName: '기업',\n    headerAlign: 'center',\n    width: 140,\n    renderCell: (params: CellParams) => (\n      <Company name={params.value} logo={params.getValue('logo')} />\n    )\n  },\n  {\n    field: 'marketcap_krw',\n    headerName: '시가총액(₩)',\n    description: '반올림된 USD기준 실시간 원화 환율을 적용 후 반올림',\n    width: 140,\n    cellClassName: 'align-right',\n    sortable: false,\n    valueFormatter: ({value}) => Number(value).toLocaleString() + '조원'\n  },\n  {\n    field: 'marketcap_usd',\n    headerName: '시가총액($)',\n    description: 'USD 통화 종목이 아닌경우 실시간 달러 환율 적용 후 반올림',\n    width: 134,\n    cellClassName: 'align-right',\n    sortable: false,\n    valueFormatter: ({value}) =>\n      (Number(value) < 10000 ? Number(value).toLocaleString()\n        : Math.floor(Number(value)/10000) + '조' + Number(String(value).substr(1)).toLocaleString()) + '억달러'\n  },\n  { field: 'company', headerName: '영문이름', width: 250 },\n  { field: 'price',\n    headerName: '주가',\n    width: 90,\n    cellClassName: 'align-right',\n    headerAlign: 'right',\n    valueFormatter: ({value}) => Number(value).toLocaleString()\n },\n { field: 'currency', headerName: '통화', width: 65 },\n { field: 'exchange', headerName: '거래소', width: 100 },\n];\n\nfunction Company(props: any){\n\n  let img = '' + props.logo;\n  if (!img.startsWith('http')) {\n    img = 'https://' + props.logo + '/favicon.ico';\n  }\n  return <div><img width=\"15\" src={img} alt={props.name}/> <span>{props.name}</span></div>\n};\n\nconst useStyles = makeStyles({\n  root: {\n    height: 1000,\n    width: '100%',\n    '& .align-right': {\n      textAlign: 'right',\n    },\n  },\n});\n\nexport default function StockList({rows}: any) {\n\n  const classes = useStyles();\n\n  const onRowClick = (param: RowParams) => {\n    window.open('https://finance.google.com/finance?q=' + param.getValue('exchange') + ':' + param.getValue('symbol') + '&tbm=fin', 'google_fin');\n  }\n\n  return (\n    <div className={classes.root}>\n      <DataGrid rows={rows} columns={columns} onRowClick={onRowClick} hideFooter autoHeight />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// @ts-ignore\nimport PublicGoogleSheetsParser from 'public-google-sheets-parser';\n// @ts-ignore\nimport Spinner from 'react-spinkit';\n\nimport StockList from './components/StockList';\n\nconst App = () => {\n\n  const [stockList, setStockList] = useState(null);\n\n  function fetchStockData() {\n\n    const parser = new PublicGoogleSheetsParser();\n\n    parser.parse(atob('MWFYem5zOW1ndWNXZjJodjBuT1JuRnFtTjZLdXhObDlGVEZYaklITlllZzQ'))\n      .then((res: any) => {\n        const data = res.sort((a: any, b: any) => a.marketcap_usd < b.marketcap_usd ? 1 : -1)\n          .map((item: any, index: number) => { item.id = index + 1; return item })\n          .slice(0, 20);\n        setStockList(data)\n    });\n  }\n\n  useEffect(() => {\n    fetchStockData();\n  }, []);\n\n  function today() {\n\n    const date = new Date();\n\n    var yyyy = date.getFullYear().toString();\n    var mm = (date.getMonth() + 1).toString();\n    var dd = date.getDate().toString();\n\n    return  yyyy + \"-\" + (mm[1] ? mm : \"0\" + mm[0]) + \"-\" + (dd[1] ? dd : \"0\" + dd[0]);\n  }\n\n  return (\n    <div>\n      <Toolbar disableGutters>\n        <Typography variant=\"h6\">\n          전세계 기업 시총 TOP20\n        </Typography>\n        <Typography variant=\"caption\" style={{ marginLeft: 40 }} noWrap>\n          {today()} <a href=\"https://github.com/hibuz/hibuz.github.io/issues/new\" style={{textDecoration: 'none'}}>❔</a>\n        </Typography>\n      </Toolbar>\n      {stockList != null ? <StockList rows={stockList}/> : <p style={{ margin: 30 }}>데이터 조회중... <Spinner name='pacman' color=\"coral\"/></p>} \n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}